# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    ## gradle caching
    - name: Gradle 캐싱
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      
    - name: Make application.yml
      run: |
          cd ./src/main
          mkdir resources
          cd ./resources
          touch ./application.yml
          touch ./application-oauth.yml
          touch ./application-jwt.yml
          echo "$APPLICATION_OAUTH" > ./application-oauth.yml
          echo "$APPLICATION_JWT" > ./application-jwt.yml
          echo "$APPLICATION" > ./application.yml
      env:
        APPLICATION_OAUTH: ${{ secrets.APPLICATION_OAUTH }}
        APPLICATION_JWT: ${{ secrets.APPLICATION_JWT }}
        APPLICATION: ${{ secrets.APPLICATION }}
      shell: bash

    - name: Gradle 권한 부여
      run: chmod +x gradlew

    - name: Gradle로 빌드 실행
      run: ./gradlew bootjar
    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md

